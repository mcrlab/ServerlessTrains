service: trains

provider:
  name: aws
  runtime: python3.6
  environment:
    DYNAMODB_TABLE: ${self:service}-${opt:stage, self:provider.stage}
    DARWIN_TOKEN: ${env:DARWIN_TOKEN}
    WSDL: ${env:WSDL}

functions:
  stations:
    handler: handler.stations
    events:
      - http:
          path: stations
          method: get
          cors: true

  iot:
    handler: handler.iot
    events:
      - http:
          path: iot/{from}/{to}
          method: get
          cors: true
          request:
            parameters:
               paths:
                 from: true
                 to: true

  next:
    handler: handler.next
    events:
      - http:
          path: next/{from}/{to}
          method: get
          cors: true
          request:
            parameters:
               paths:
                 from: true
                 to: true
  
  multiple:
    handler: handler.multiple
    events:
      - http:
          path: departures
          method: post
          cors: true

  spread:
    handler: handler.spread
    events:
      - http:
          path: spread
          method: post
          cors: true
        
        
          
plugins:
  - serverless-python-requirements
  - serverless-domain-manager

custom:
  pythonRequirements:
    dockerizePip: non-linux

  customDomain:
    domainName: ${env:SERVICE_DOMAIN}
    basePath: ''
    stage: ${self:provider.stage}
    createRoute53Record: true

package:
  exclude:
  - .circleci/**
  - .coverage
  